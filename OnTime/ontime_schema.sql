--drop table ontime;
CREATE TABLE ontime
(
    -- no need to store those columns. Just waste of disk and CPU time
    Year                            UInt16 alias toYear(FlightDate),
    Quarter                         UInt8 alias toQuarter(FlightDate),
    Month                           UInt8 alias toMonth(FlightDate),
    DayofMonth                      UInt8 alias toDayOfMonth(FlightDate),
    DayOfWeek                       UInt8 alias toDayOfWeek(FlightDate),

    FlightDate Date,
    --Switching to ENum8 from String for better PK index efficiency
    Reporting_Airline Enum8('B6'=1,'VX'=2,'NW'=3,'AS'=4,'DL'=5,'NK'=6,'PI'=7,'HP'=8,'QX'=9,'MQ'=10,'UA'=11,'ML (1)'=12,'OH'=13,'G4'=14,'TW'=15,'US'=16,'EA'=17,'WN'=18,'CO'=19,'YX'=20,'TZ'=21,'XE'=22,'AA'=23,'9E'=24,'PA (1)'=25,'F9'=26,'FL'=27,'EV'=28,'KH'=29,'YV'=30,'DH'=31,'HA'=32,'PS'=33,'OO'=34),

    DOT_ID_Reporting_Airline        UInt32,
    IATA_CODE_Reporting_Airline     LowCardinality(String),
    Tail_Number                     LowCardinality(String),
    Flight_Number_Reporting_Airline LowCardinality(String),
    OriginAirportID                 UInt32,
    OriginAirportSeqID              UInt32,
    OriginCityMarketID              UInt32,
    Origin                          FixedString(5),
    OriginCityName                  LowCardinality(String),
    OriginState                     FixedString(2),
    OriginStateFips                 FixedString(2),
    OriginStateName                 LowCardinality(String),
    OriginWac                       UInt32,
    DestAirportID                   UInt32,
    DestAirportSeqID                UInt32,
    DestCityMarketID                UInt32,
    Dest                            FixedString(5),
    DestCityName                    LowCardinality(String),
    DestState                       FixedString(2),
    DestStateFips                   FixedString(2),
    DestStateName                   LowCardinality(String),
    DestWac                         UInt32,
    CRSDepTime                      UInt32,
    DepTime                         UInt32,
    DepDelay                        Int32,
    DepDelayMinutes                 UInt32,
    DepDel15                        UInt32,
    DepartureDelayGroups            Int8,
    DepTimeBlk                      LowCardinality(String),
    TaxiOut                         UInt32,
    WheelsOff                       LowCardinality(String),
    WheelsOn                        LowCardinality(String),
    TaxiIn                          UInt32,
    CRSArrTime                      UInt32,
    ArrTime                         UInt32,
    ArrDelay                        Int32,
    ArrDelayMinutes                 UInt32,
    ArrDel15                        UInt32,
    ArrivalDelayGroups              Int8,
    ArrTimeBlk                      LowCardinality(String),
    Cancelled                       UInt8,
    CancellationCode                FixedString(1),
    Diverted                        UInt8,
    CRSElapsedTime                  Int32,
    ActualElapsedTime               Int32,
    AirTime                         UInt32,
    Flights                         UInt32,
    Distance                        UInt32,
    DistanceGroup                   UInt8,
    CarrierDelay                    UInt32,
    WeatherDelay                    UInt32,
    NASDelay                        Int32,
    SecurityDelay                   UInt32,
    LateAircraftDelay               UInt32,
    FirstDepTime                    UInt16,
    TotalAddGTime                   UInt16,
    LongestAddGTime                 UInt16,
    DivAirportLandings              UInt8,
    DivReachedDest                  UInt8,
    DivActualElapsedTime            Int16,
    DivArrDelay                     Int16,
    DivDistance                     UInt16,
    Div1Airport                     LowCardinality(String),
    Div1AirportID                   UInt32,
    Div1AirportSeqID                UInt32,
    Div1WheelsOn                    UInt16,
    Div1TotalGTime                  UInt16,
    Div1LongestGTime                UInt16,
    Div1WheelsOff                   UInt16,
    Div1TailNum                     LowCardinality(String),
    Div2Airport                     LowCardinality(String),
    Div2AirportID                   UInt32,
    Div2AirportSeqID                UInt32,
    Div2WheelsOn                    UInt16,
    Div2TotalGTime                  UInt16,
    Div2LongestGTime                UInt16,
    Div2WheelsOff                   UInt16,
    Div2TailNum                     LowCardinality(String),
    Div3Airport                     LowCardinality(String),
    Div3AirportID                   UInt32,
    Div3AirportSeqID                UInt32,
    Div3WheelsOn                    UInt16,
    Div3TotalGTime                  UInt16,
    Div3LongestGTime                UInt16,
    Div3WheelsOff                   UInt16,
    Div3TailNum                     LowCardinality(String),
    Div4Airport                     LowCardinality(String),
    Div4AirportID                   UInt32,
    Div4AirportSeqID                UInt32,
    Div4WheelsOn                    UInt16,
    Div4TotalGTime                  UInt16,
    Div4LongestGTime                UInt16,
    Div4WheelsOff                   UInt16,
    Div4TailNum                     LowCardinality(String),
    Div5Airport                     LowCardinality(String),
    Div5AirportID                   UInt32,
    Div5AirportSeqID                UInt32,
    Div5WheelsOn                    UInt16,
    Div5TotalGTime                  UInt16,
    Div5LongestGTime                UInt16,
    Div5WheelsOff                   UInt16,
    Div5TailNum                     LowCardinality(String),

    -- It's possible to add more columns to make experiments
    Div2AirportNull                 LowCardinality(Nullable(String)),
    Div2AirportIDNull               Nullable(UInt32)

)
ENGINE = MergeTree
ORDER BY (
    FlightDate,        -- always good to have date on the first place
    Reporting_Airline -- good for filtering by AirLine.
    --,mortonEncode(OriginAirportID,DestAirportID) -- could be beneficial if there is queries with filtering by both those columns
    )
--partition by toYear(FlightDate) -- no need partitioning for 15Gb of data
;


